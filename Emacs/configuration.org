#+TITLE: Emacs Configuration
#+OPTIONS: toc:nil num:nil

* Configure =use-package=

I use =use-package= to install and configure my packages. My =init.el= includes
the initial setup for =package.el= and ensures that =use-package= is installed,
since I wanna do that right away.

This makes sure that =use-package= will install the package if it's not already
available. It also means that I should be able to open Emacs for the first time
on a fresh Debian box and have my whole environment automatically installed. I'm
not /totally/ sure about that, but we're gettin' close.

#+begin_src emacs-lisp
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)
#+end_src

Always compile packages, and use the newest version available.

#+begin_src emacs-lisp
  (use-package auto-compile
    :config (auto-compile-on-load-mode))

  (setq load-prefer-newer t)
#+end_src

* Set personal information

** Who am I? Where am I?

#+begin_src emacs-lisp
  (setq user-full-name "Gregor Willenbrock"
        user-mail-address "g@wbrck.de")
#+end_src

* =evil-mode=

Load and configure =evil-mode=.

I'd prefer not to expand abbrevs when I hit escape. That's always jarring and
usually not what I want. In particular, it makes working with Coq really
frustrating.

Don't automatically load Evil bindings in different modes.

#+begin_src emacs-lisp
  (use-package evil
    :init
    (setq evil-want-abbrev-expand-on-insert-exit nil
          evil-want-keybinding nil)

    :config
    (evil-mode 1))
#+end_src

Install =evil-collection=, which provides evil-friendly bindings for many modes.

#+begin_src emacs-lisp
  (use-package evil-collection
    :after evil
    :config
    (setq evil-collection-mode-list
          '(ag dired magit mu4e which-key))
    (evil-collection-init))
#+end_src

Enable =surround= everywhere.

#+begin_src emacs-lisp
  (use-package evil-surround
    :config
    (global-evil-surround-mode 1))
#+end_src

Use =evil= with Org agendas.

#+begin_src emacs-lisp
  (use-package evil-org
    :after org
    :config
    (add-hook 'org-mode-hook 'evil-org-mode)
    (add-hook 'evil-org-mode-hook
              (lambda () (evil-org-set-key-theme)))
    (require 'evil-org-agenda)
    (evil-org-agenda-set-keys))
#+end_src


* UI preferences

#+begin_src emacs-lisp
  
(setq inhibit-splash-screen t
      initial-scratch-message nil)

  (tool-bar-mode 0)
  (menu-bar-mode 0)
  (scroll-bar-mode -1)
  (set-frame-font "SF Mono-18" nil t)
#+end_src

** Load up a theme


#+begin_src emacs-lisp
(use-package nord-theme
    :demand)
(use-package doom-modeline
  :init (doom-modeline-mode 1))
#+end_src

** Disable visual bell

#+begin_src emacs-lisp
  (setq ring-bell-function 'ignore)
#+end_src




#+begin_src emacs-lisp
  (use-package git-gutter
  :ensure git-gutter-fringe
  :hook ((prog-mode . git-gutter-mode)
         (org-mode . git-gutter-mode)))

(use-package all-the-icons
  :after font-lock+
  :ensure t)

(use-package which-key
  :ensure t
  :config (which-key-mode))

(use-package org
  :ensure t)

(use-package org-ref
  :ensure t)#+end_src

