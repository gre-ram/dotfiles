#!/bin/bash

while getopts f: opt; do
    case $opt in
        f)
            BIBKEYFMT=$OPTARG
            ;;
    esac
done

shift $((OPTIND - 1))


extract_doi() {
    dois=$(pdfinfo "$1" | grep -io "doi:.*") ||
    dois=$(pdftotext "$1" - | pcregrep -M -o "\b(10[.][0-9]{4,}(?:[.][0-9]+)*/(?:(?![\"&\'<>])\S)+)\b") ||
    echo "No doi found. Use --doi / -d or --citekey / -c" && exit 1
}


check_file() {
    find ~/Documents/Sci-Bib/. | grep -i -q ${1}
    if [ $? -eq 0 ]
    then
            old_file=$(find ~/Documents/Sci-Bib/. | grep -i ${1})
            get_old_info $old_file
            mv $old_file "old""$key"".txt"
            make_file
            if [ -z ${old_pdf+x} ]; then : ; else mv "$old_pdf" "$key"".pdf" ; fi
            exit 1
    else
            :   
    fi
}


for FILE in "$@"; do

    # skip directories
    if [ -d "$FILE" ];
    then
        echo "Skipping directory $FILE" >&2
        continue
    fi

    DOI=$(pdftotext -q -l 2 "$FILE" - \
        | sed 's/Digital Object Identifier[:]*/doi:/g' \
        | grep -m1 -A1 'DOI\|doi' \
        | sed 's/[\[\]]/ /g' \
        | sed 's/dx\.doi\.org\// doi:/g' \
        | sed 's/doi>/ doi:/g' \
        | sed 's/</ /g' \
        | sed -n -e 's_.*[Dd][Oo][Ii][:) ] *\([[:digit:]][[:digit:]]*.[[:alnum:])(.-]*/[[:alnum:])(.-][[:alnum:]):(.-]*[[:alnum:]-]\).*_\1_p' )

    # test here for DOI returned
    if [ -z $DOI ]
    then
        echo "Skipping $FILE, no DOI found" >&2
        continue
    fi

    URL="http://dx.doi.org/$DOI"
    #echo "@COMMENT {Generated by doi2bibtex from $URL on $(date)}"

    # uses crossref API
    # see http://www.crossref.org/CrossTech/2011/11/turning_dois_into_formatted_ci.html
    # resolve URL
    curl -s -LH "Accept: text/bibliography; style=bibtex" $URL | sed 's/,/,\n/g' | sed 's/}}/}\n}/' | grep -v "$BIBENTRYFILTER" | bibclean -delete-empty-values -no-check-values | bibtool -F -f "$BIBKEYFMT";

done 


#########################
